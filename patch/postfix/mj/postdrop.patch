Only in postfix-3.3.2-patched/src/postdrop/: Makefile
diff -c postfix-3.3.2/src/postdrop/postdrop.c postfix-3.3.2-patched/src/postdrop/postdrop.c
*** postfix-3.3.2/src/postdrop/postdrop.c	2016-09-17 17:50:56.000000000 +0300
--- postfix-3.3.2-patched/src/postdrop/postdrop.c	2019-02-27 19:12:00.502983025 +0300
***************
*** 144,149 ****
--- 144,151 ----
  #include <user_acl.h>
  #include <rec_attr_map.h>
  #include <mail_parm_split.h>
+ /* Added by MJ engineers */
+ #include <majordomo_rate_limit.h>
  
  /* Application-specific. */
  
***************
*** 245,250 ****
--- 247,260 ----
      int     rcpt_count = 0;
      int     validate_input = 1;
  
+ 	/* Initialize MJ rate dbs */
+ 	MJ_DBS	mj_postfix_dbs;
+ 	char	mj_update_dbs_flag = 0;
+ 	char	mj_flush_rate_flag = 0;
+ 	u_int32_t mj_dbs_open_flags;
+ 	int mj_ret;
+ 
+ 
      /*
       * Fingerprint executables and core dumps.
       */
***************
*** 284,290 ****
       * mail configuration read routine. Don't do complex things until we have
       * completed initializations.
       */
!     while ((c = GETOPT(argc, argv, "c:rv")) > 0) {
  	switch (c) {
  	case 'c':
  	    if (setenv(CONF_ENV_PATH, optarg, 1) < 0)
--- 294,300 ----
       * mail configuration read routine. Don't do complex things until we have
       * completed initializations.
       */
!     while ((c = GETOPT(argc, argv, "c:rvuf")) > 0) {
  	switch (c) {
  	case 'c':
  	    if (setenv(CONF_ENV_PATH, optarg, 1) < 0)
***************
*** 296,303 ****
  	    if (geteuid() == 0)
  		msg_verbose++;
  	    break;
  	default:
! 	    msg_fatal("usage: %s [-c config_dir] [-v]", argv[0]);
  	}
      }
  
--- 306,319 ----
  	    if (geteuid() == 0)
  		msg_verbose++;
  	    break;
+ 	case 'u':
+ 		mj_update_dbs_flag = 1;
+ 		break;
+ 	case 'f':
+ 		mj_flush_rate_flag = 1;
+ 		break;
  	default:
! 	    msg_fatal("usage: %s [-c config_dir] [-v] [-u] [-f]", argv[0]);
  	}
      }
  
***************
*** 508,513 ****
--- 524,553 ----
  	postdrop_cleanup();
      }
  
+ 	/* Update mj databases if specified */
+ 	if (mj_update_dbs_flag) {
+ 		mj_dbs_open_flags = NULL;
+ 		mj_initialize_dbs(&mj_postfix_dbs);
+ 		mj_set_db_filenames(&mj_postfix_dbs);
+ 		mj_databases_setup(&mj_postfix_dbs, argv[0], stderr, mj_dbs_open_flags);
+ 
+ 		msg_info("uid:%d decrease message limit in mj dbs", uid);
+ 		mj_decrease_senders_message_limit(&(mj_postfix_dbs.senders_rate_db_pointer));
+ 		mj_databases_close(&mj_postfix_dbs);
+ 
+ 	}
+ 
+ 	if (mj_flush_rate_flag) {
+ 		mj_dbs_open_flags = NULL;
+ 		mj_initialize_dbs(&mj_postfix_dbs);
+ 		mj_set_db_filenames(&mj_postfix_dbs);
+ 		mj_databases_setup(&mj_postfix_dbs, argv[0], stderr, mj_dbs_open_flags);
+ 
+ 		mj_ret = mj_flush_rate(&(mj_postfix_dbs.senders_rate_db_pointer), &(mj_postfix_dbs.senders_atime_db_pointer));
+ 		msg_info("uid:%d first message or period exceed, flush mj dbs. Return code: %d", uid, mj_ret);
+ 		mj_databases_close(&mj_postfix_dbs);
+ 	}
+ 
      /*
       * Disable deletion on fatal error before reporting success, so the file
       * will not be deleted after we have taken responsibility for delivery.
